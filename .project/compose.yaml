networks:
    devx:
        driver: bridge
services:
    database:
        environment:
            - POSTGRES_DB=appdb
            - POSTGRES_USER=appuser
            - POSTGRES_PASSWORD=apppass
        hostname: app-db
        image: postgres:15
        networks:
            - devx
        restart: always
        volumes:
            - db-data:/var/lib/postgresql/data
    devx:
        build:
            context: cache
            dockerfile: ../Containerfile
        command:
            - jupyter
            - lab
            - --ip=0.0.0.0
            - --port=8888
            - --no-browser
            - --ServerApp.token=''
            - --ServerApp.password_required=False
            - --expose-app-in-browser
            - --NotebookApp.allow_origin='*'
            - --NotebookApp.base_url=$PROXY_PREFIX
            - --NotebookApp.default_url=/lab
            - --allow-root
        environment:
            - RUNTIME_VAR=5
            - SHELL=/bin/bash
            - NGC_API_KEY=${NGC_API_KEY}
            - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME:-devx}
        healthcheck:
            interval: 30s
            retries: 3
            start_period: 60s
            test:
                - CMD-SHELL
                - curl -f http://localhost:8888/api || exit 1
            timeout: 10s
        ipc: host
        networks:
            - devx
        ports:
            - 8888:8888
        restart: always
        volumes:
            - ..:/project:cached
            - /var/run/docker.sock:/var/run/docker.sock
    llama-3-1-8b-instruct:
        deploy:
            resources:
                reservations:
                    devices:
                        - capabilities:
                            - gpu
                          device_ids:
                            - "1"
                          driver: nvidia
        environment:
            - NGC_API_KEY=${NGC_API_KEY}
            - NIM_LOW_MEMORY_MODE=1
            - NIM_RELAX_MEM_CONSTRAINTS=1
        extra_hosts:
            host.docker.internal: host-gateway
        healthcheck:
            interval: 30s
            retries: 60
            start_period: 1800s
            test:
                - CMD
                - python3
                - -c
                - import http.client; conn = http.client.HTTPConnection('localhost', 8000); conn.request('GET', '/v1/health/ready'); response = conn.getresponse(); exit(0 if response.status == 200 else 1)
            timeout: 10s
        hostname: llama-3-1
        image: nvcr.io/nim/meta/llama-3.1-8b-instruct:1.3.3
        networks:
            - devx
        ports:
            - 8007:8000
        profiles:
            - dual-gpu
        restart: always
        shm_size: 16gb
        volumes:
            - nim-cache:/opt/nim/.cache
    llama-3-1-70b-instruct:
        deploy:
            resources:
                reservations:
                    devices:
                        - capabilities:
                            - gpu
                          device_ids:
                            - "2"
                            - "3"
                          driver: nvidia
        environment:
            - NGC_API_KEY=${NGC_API_KEY}
            - NIM_LOW_MEMORY_MODE=1
            - NIM_RELAX_MEM_CONSTRAINTS=1
        extra_hosts:
            host.docker.internal: host-gateway
        healthcheck:
            interval: 30s
            retries: 60
            start_period: 1800s
            test:
                - CMD
                - python3
                - -c
                - import http.client; conn = http.client.HTTPConnection('localhost', 8000); conn.request('GET', '/v1/health/ready'); response = conn.getresponse(); exit(0 if response.status == 200 else 1)
            timeout: 10s
        hostname: llama-3-1
        image: nvcr.io/nim/meta/llama-3.1-70b-instruct:1.3.3
        networks:
            - devx
        ports:
            - 8008:8000
        profiles:
            - quad-gpu
        restart: always
        shm_size: 16gb
        volumes:
            - nim-cache:/opt/nim/.cache
    my-app-dual-gpu:
        deploy:
            resources:
                reservations:
                    devices:
                        - capabilities:
                            - gpu
                          device_ids:
                            - "0"
                            - "1"
                          driver: nvidia
        environment:
            - CUDA_VISIBLE_DEVICES=0,1
            - APP_MODE=dual-gpu
            - NGC_API_KEY=${NGC_API_KEY}
        hostname: my-app
        image: nvidia/cuda:12.0-devel-ubuntu20.04
        networks:
            - devx
        ports:
            - 8080:8080
            - 8888:8888
        profiles:
            - dual-gpu
        restart: unless-stopped
        runtime: nvidia
        volumes:
            - app-data:/workspace
    my-app-quad-gpu:
        deploy:
            resources:
                reservations:
                    devices:
                        - capabilities:
                            - gpu
                          device_ids:
                            - "0"
                            - "1"
                            - "2"
                            - "3"
                          driver: nvidia
        environment:
            - CUDA_VISIBLE_DEVICES=0,1,2,3
            - APP_MODE=quad-gpu
            - NGC_API_KEY=${NGC_API_KEY}
        hostname: my-app
        image: nvidia/cuda:12.0-devel-ubuntu20.04
        networks:
            - devx
        ports:
            - 8080:8080
            - 8888:8888
        profiles:
            - quad-gpu
        restart: unless-stopped
        runtime: nvidia
        volumes:
            - app-data:/workspace
    my-app-single-gpu:
        deploy:
            resources:
                reservations:
                    devices:
                        - capabilities:
                            - gpu
                          device_ids:
                            - "0"
                          driver: nvidia
        environment:
            - CUDA_VISIBLE_DEVICES=0
            - APP_MODE=single-gpu
            - NGC_API_KEY=${NGC_API_KEY}
        hostname: my-app
        image: nvidia/cuda:12.0-devel-ubuntu20.04
        networks:
            - devx
        ports:
            - 8080:8080
            - 8888:8888
        profiles:
            - single-gpu
        restart: unless-stopped
        runtime: nvidia
        volumes:
            - app-data:/workspace
volumes:
    app-data: {}
    db-data: {}
    nim-cache: {}
